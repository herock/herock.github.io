{"pages":[{"title":"","text":"google-site-verification: google9de04b5718a6898d.html","link":"/google9de04b5718a6898d.html"},{"title":"关于","text":"关于我。","link":"/about/index.html"}],"posts":[{"title":"Python-docx","text":"需要在 Dify 工作流里处理 word 文档，需要一个好用的能够处理 word 文档的库，问了下 Grok，最终决定用 python-docx 这个库，Grok 的研究报告在这里。","link":"/p/649363453/"},{"title":"试用 Dify 知识库后总结的几个要点","text":"今天稍微深入的试用了 Dify 知识库，记录一些要点： 一、API集成与功能入口Dify知识库提供便捷的API接口（位于知识库首页左上角导航栏右侧），支持开发者通过自定义工具提交数据，并轻松整合至现有系统架构中。 二、分段策略配置要点 Q&amp;A模式特性 该模式需在知识库创建时预先选择，后期不可变更 虽存在灵活性限制（无法按文档差异化设置），但实际生成效果显著，特别适用于FAQ类知识整理 建议：前期规划时明确内容类型，批量处理同类文档 参数调优指南 参数项 推荐范围 影响分析 调整策略 分段最大长度 200-600 过长引入噪音/过少丢失上下文 依据内容密度动态调整 分段重叠长度 50-150 不足导致语义断裂/冗余 保持10%-20%内容重叠 三、效果验证与召回测试 文档处理完成后，务必通过”召回测试”功能验证： 在”源文本”输入真实用户可能提问的自然语言 观察返回结果的关联性与完整性 典型案例测试建议覆盖高频查询场景 迭代优化流程测试效果不佳时，按以下顺序调整：1调整分段参数 → 优化检索参数 → 改进知识内容质量 四、高级检索参数解析 TopK动态调整机制 定义：返回最相关的前K个文档块（默认K=3） 系统根据模型上下文窗口自动优化片段数量 调参原则：资源充足时适当提高数值增强召回率 Score阈值控制 基于余弦相似度的过滤机制（默认阈值0.5） 数值与召回精度呈正相关，与数量呈负相关 推荐策略：初期设为默认值，逐步提升至质量瓶颈 参考文档： Dify官方知识库文档 DeepSeek与Dify集成开发指南","link":"/p/1053145340/"},{"title":"配置 AI Studio 访问的域名规则","text":"为了能够顺利访问 Google AI Studio (aistudio.google.com) 以及其相关服务，通常需要配置特定的域名代理规则。这些规则帮助确保网络请求被正确路由，从而绕过可能的访问限制。 以下是一份收集整理的推荐配置规则，适用于常见的代理工具（如 Clash, Surge, Quantumult X 等）所支持的域名规则格式。(没有逐一排查，可能有个别规则是非必需的) 域名规则列表1234567891011121314151617name: &apos;AI Studio&apos;desc: &apos;Google AI Studio&apos;rules: - DOMAIN,aistudio.google.com,proxy - DOMAIN,ai.google.dev,proxy - DOMAIN,ai.dev,proxy - DOMAIN-SUFFIX,makersuite.google.com,proxy - DOMAIN,alkalicore-pa.clients6.google.com,proxy - DOMAIN,alkalimakersuite-pa.clients6.google.com,proxy - DOMAIN-SUFFIX,generativeai.google,proxy - DOMAIN,developerprofiles-pa.googleapis.com,proxy - DOMAIN,content-developerprofiles-pa.googleapis.com,proxy - DOMAIN,fonts.googleapis.com,proxy - DOMAIN,www.google-analytics.com,proxy - DOMAIN,play.google.com,proxy - DOMAIN,people-pa.clients6.google.com,proxy - DOMAIN,waa-pa.clients6.google.com,proxy 在 Stash 中配置在 Stash 中，你可以通过以下步骤添加这些域名规则： 把上面的代码存成一个文件，如 aistudio.stoverride，并上传到可访问的服务器上，复制该文件的 url； 打开 Stash 的“控制面板”； 点“覆写” 点“从 URL 安装”，粘贴刚刚复制的 URL； 确保“覆写”和刚才添加的覆写规则的开关都打开。","link":"/p/3847286674/"},{"title":"简单生活准则","text":"两年前，我发现了一个能让自己瞬间变幸福的方法：扔东西。 不是在开玩笑，这里的「东西」是泛指：删掉所有非必须的 App、扔掉不会再看的书、清除那些已经想不起来是谁的联系人…… 这些事儿都能让你感觉到清空内存般畅快，绝对超过你想象的程度。 我以前不舍得扔东西，常觉得「这个没准儿以后还用得着呢」，或是「这个当时买的时候挺贵的，还是留着吧」，结果攒了一堆没用的东西，不但占了物理上的空间，而重要的是在我的「心理内存」中占据了大量空间（这个词是我杜撰的，但你应该懂我的意思），直到把它们都清空后，我才意识到当初浪费有多么巨大。 此后的几年，在总体生活成本没有提高的情况下，我的幸福感比以前高了好几倍，于是我开始以此为基点，发展我自己的「极简生活准则」，这个轻单就是我总结的要点，如果喜欢，你也可以试试。","link":"/p/1243066710/"},{"title":"自定义 Twitter 链接预览：Twitter Cards 详解","text":"当我们在 Twitter 上分享一个 URL 时，Twitter 会尝试抓取这个 URL 的信息，并以一种特定的卡片形式展示出来，这就是 Twitter Card。正确配置 Twitter Cards 可以显著改善链接在 Twitter 上的展示效果，并可能提高用户互动。 本文将介绍 Twitter Cards 的基本概念、主要类型、实现方式以及一些注意事项。 什么是 Twitter Cards？Twitter Cards 是一种通过在网页 HTML 的 &lt;head&gt; 部分添加特定 meta 标签来实现的富媒体展示功能。当有人分享你的网页链接到 Twitter 时，Twitter 的爬虫会读取这些 meta 标签，并根据其内容生成一个包含标题、描述、图片甚至视频播放器的卡片。 为什么使用 Twitter Cards？ 控制展示内容：你可以精确控制分享链接时显示的标题、描述和图片，而不是让 Twitter 自动抓取。 提升视觉吸引力：相比纯文本链接，带有图片或视频的卡片更吸引眼球。 提高点击率 (CTR)：更丰富和相关的预览信息通常能带来更高的点击率。 品牌一致性：确保分享内容符合你的品牌形象。 Twitter Cards 的类型Twitter 提供了几种不同类型的 Card，以适应不同的内容需求： Summary Card (摘要卡片) 用途：通用型卡片，适用于博客文章、新闻、产品页面等。 特点：包含标题、描述、缩略图以及 Twitter 账户归属。 关键 meta 标签：twitter:card 值为 summary。 Summary Card with Large Image (带大图的摘要卡片) 用途：与 Summary Card 类似，但图片展示区域更大，更突出。 特点：图片是卡片的主要视觉元素。 关键 meta 标签：twitter:card 值为 summary_large_image。 App Card (应用卡片) 用途：推广移动应用。 特点：直接显示应用名称、图标、评分、价格，并提供直接下载链接（指向应用商店）。 关键 meta 标签：twitter:card 值为 app。 Player Card (播放器卡片) 用途：分享音频或视频内容。 特点：允许用户直接在 Twitter 信息流中播放媒体内容。 关键 meta 标签：twitter:card 值为 player。需要提供视频/音频播放器 URL。 如何实现 Twitter Cards？实现 Twitter Cards 的核心是在你网页的 &lt;head&gt; 部分添加一系列 meta 标签。 以下是一个 summary_large_image 类型的基本示例： 123456789&lt;head&gt; &lt;meta name=\\&quot;twitter:card\\&quot; content=\\&quot;summary_large_image\\&quot;&gt; &lt;meta name=\\&quot;twitter:site\\&quot; content=\\&quot;@你的Twitter用户名\\&quot;&gt; &lt;meta name=\\&quot;twitter:creator\\&quot; content=\\&quot;@内容创作者的Twitter用户名\\&quot;&gt; &lt;meta name=\\&quot;twitter:title\\&quot; content=\\&quot;页面标题 - 最多70个字符\\&quot;&gt; &lt;meta name=\\&quot;twitter:description\\&quot; content=\\&quot;页面描述 - 最多200个字符\\&quot;&gt; &lt;meta name=\\&quot;twitter:image\\&quot; content=\\&quot;https://example.com/path/to/your/image.jpg\\&quot;&gt; &lt;meta name=\\&quot;twitter:image:alt\\&quot; content=\\&quot;图片的描述文字\\&quot;&gt;&lt;/head&gt; 关键 Meta 标签详解虽然不同类型的 Card 有其特定的标签，但以下是一些通用的和核心的标签： twitter:card: 定义 Card 的类型。这是必需的。 可选值: summary, summary_large_image, app, player。 twitter:site: 网站或公司的 Twitter 用户名，例如 @mytwitterhandle。通常是发布者的用户名。 twitter:creator: 内容创作者的 Twitter 用户名，例如 @authorhandle。可选，适用于多作者网站。 twitter:title: Card 的标题。对于 summary 类型，建议最多 70 个字符。 twitter:description: Card 的描述。对于 summary 类型，建议最多 200 个字符。如果描述为空，Twitter 可能会从页面内容中提取。 twitter:image: Card 中显示的图片的 URL。图片必须小于 5MB。 对于 summary 卡片，图片宽高比应为 1:1，最小尺寸 144x144px，最大尺寸 4096x4096px。 对于 summary_large_image 卡片，图片宽高比应为 2:1，最小尺寸 300x157px，最大尺寸 4096x4096px。 twitter:image:alt: 图片的描述性文本，用于可访问性 (Accessibility)。 twitter:player (Player Card 特有): 指向你的播放器 iframe 的 HTTPS URL。 twitter:player:width, twitter:player:height (Player Card 特有): 播放器的尺寸。 twitter:app:name:iphone, twitter:app:id:iphone, twitter:app:url:iphone (App Card 特有): 针对 iPhone 的应用信息。类似地，还有 ipad 和 googleplay 的对应标签。 调试和验证实现 Twitter Cards 后，务必使用 Twitter 官方提供的 Card Validator (卡片验证器) 进行测试。 地址：https://cards-dev.twitter.com/validator 通过验证器，你可以： 输入你的页面 URL。 预览 Card 在 Twitter 上的显示效果。 查看 Twitter 爬虫抓取到的 meta 标签信息以及任何错误或警告。 首次分享一个 URL 时，如果 Twitter 之前没有缓存过该页面的 Card 数据，可能需要几秒钟到几分钟来抓取和生成 Card。验证器可以帮助预先抓取和缓存。 ⚠️ 废弃提示：这个验证器现在已经被废弃，官方推荐直接在发帖窗口中预览 Card，无需额外操作。 注意事项 图片尺寸和格式：严格遵守 Twitter 对图片尺寸、宽高比和文件大小的规定，否则图片可能无法正确显示或被裁剪。支持 JPG, PNG, WEBP, GIF (GIF 只会显示第一帧作为静态图)。 URL 必须是绝对路径：所有 URL (如 twitter:image, twitter:player) 都应该是绝对路径，并正确编码。 HTTPS：对于 twitter:player 和 twitter:image 等资源，强烈建议使用 HTTPS 链接，以避免混合内容警告。Player Card 的 twitter:player URL 必须 是 HTTPS。 robots.txt：确保你的 robots.txt 文件没有禁止 Twitter 的爬虫 (Twitterbot) 访问你的页面和相关资源（如图片）。 缓存：Twitter 会缓存 Card 数据。如果你更新了页面的 meta 标签，可能需要一段时间才能在 Twitter 上看到更新。使用 Card Validator 可以帮助刷新缓存。 内容唯一性：每个页面应该有其自己独特的 Card 信息，以准确反映页面内容。 Open Graph (OG) 标签兼容性：如果页面上同时存在 Open Graph (OG) 标签 (如 og:title, og:image) 而没有相应的 Twitter Card 标签，Twitter 会尝试使用 OG 标签来生成 Card。但为了获得最佳控制，建议明确设置 Twitter Card 标签。如果两者都存在，Twitter Card 标签优先。 总结Twitter Cards 是一个简单但有效的工具，可以优化你的内容在 Twitter 上的传播效果。通过添加几个 meta 标签，就能让分享的链接更具吸引力，从而可能带来更高的用户参与度。花点时间正确配置它们是值得的。","link":"/p/390731927/"},{"title":"目前国内比较好的TTS(语音合成)接口","text":"想在播客里加一个小功能：每天自动播报几条科技新闻。新闻来源可以通过一些接口抓取再筛选，但用真人来读成本实在太高，TTS（语音合成）如果可行，当然是比较完美的方案。大概5年前试过科大讯飞的TTS接口，当时感觉效果还不错，但用于正式的内容类产品中仍略显牵强。 5年过去了，国内的TTS水平会不会已经突飞猛进？有点期待，于是简单测试了一下，总体感受没有期待中那么大进步，用于阅读新闻等场景仍然不太理想，目前比较适合的可能还是读验证码、简短的语音提示等场景。 分别说说试过的几个接口，由于我的需求是在服务器端生成语音文件，所以测试的都是在线调用的Web接口，不是App里的SDK： 科大讯飞网址： 讯飞开放平台-在线语音合成 合成多音字、静音停顿、数字读法 优点： 精品发音人的效果比较好，其中“讯飞晓峰”比较适合播报严肃新闻 对多音字、静音停顿、数字、英文读法等提供了控制标记，比如： 着[=zhuo2]手：多音字“着”在这里读为zhuó 你好[p500]科大讯飞：静音停顿500毫秒 [n2]123[n1]456[n0]：123将会按照数值处理，读成“一百二十三”，456则会按照号码处理，读成“四五六”，其后出现的数字，则会自动判断读法 缺点： 接口有每日调用次数限制，默认500次，可申请调至2万次/天，听起来不少，可实际调用时每次不能请求太长的文本，需要拆分，如果需要生成的内容比较多，还是有可能达到上限 免费的普通发音人效果非常差，在新闻阅读的场景中，几乎不可用 精品发音人效果虽然较好，但需要付费使用，年付2万-10万元，对于免费项目来说，这个使用成本比较难接受 腾讯腾讯有好几个团队在提供相关接口，我找到的有三个： 腾讯AI实验室 腾讯优图 腾讯云 其中前两个接口都是在“腾讯AI开放平台”上提供的，可以在这里体验一下生成语音的效果，具体的文档在这里。 腾讯AI实验室接口效果不好，和科大讯飞的普通发音人差不多。 腾讯优图的效果明显好很多，目前又免费试用，且不限制请求次数，本来已经觉得可以选择了，但有一个很难接受的Bug是：无法控制英文的读法。比如对“IT”来说，有时我们希望按照单词的方式，读成“it”，但很多时候，需要按照字母的方式读出“I-T”，如果用科大讯飞的接口，可以用标记来指定想要的读法，但优图并没有提供类似的方式来指定读法，也无法足够智能的判断应该怎么读，不论传给它“it”、“It”，还是“IT”，永远都只会按照单词的方式来读，因此也无法使用。 最后试用的是腾讯云的语音合成API，文档在这里，Python的SDK在这里。 总结测试后发现，综合来说，腾讯云的语音合成接口是目前最适合我的： 优点： 生成效果非常好，个人感受甚至超过科大讯飞需要付费的精品发音人 目前内测阶段免费使用，且无调用次数限制 前面提到优图做不好的英文读法问题，腾讯云可以部分解决：传“it”会按单词读，传“IT”会按字母读 缺点： 无法控制多音字读法、数字读法、英文读法 无法控制停顿（但可以通过切分成多段文本来自己控制） 最终开发此功能时，我会选择使用腾讯云的TTS（语音合成）接口。","link":"/p/2737981892/"},{"title":"浮光掠影走美国","text":"因故出行美国一周，旧金山进纽约出，时间太紧张，无暇深度感受，只能草草记下一些浅显的印象。 从北京出发，去程选择了美联航直飞旧金山，对美国航空公司的服务早有耳闻，但心中尚存一丝侥幸，觉得未必真有那么不堪。但登机之后，心彻底凉了，美联航的服务给我的整体感受，是一种破罐子破摔的状态。 令人心生敬意的机龄首先是飞机旧，我们这架已经16年机龄，机舱里随处可见岁月的痕迹。事实证明，老而弥坚是不存在的，这架飞机没有辜负它的年龄，在连续宣布两次推迟起飞之后，终于正式确定此次航班被取消了，原因没有公布，但据听到机组内部讨论的乘客说，可能是检查时发现引擎有问题。 Shit！我的第一天行程全部被打乱，约好的人要重新约、酒店恰好定的是不可改期不可退款的…… 更讨厌的是，本来就紧张的时间，又强行被砍掉一天。 无比烦躁中下机前往航空公司安排的酒店，却发现旁边几个转机的东南亚妹子欢天喜地，对她们这种什么都比时间更贵重的年龄来说，平白多了一晚在北京玩，又有人免费承担五星级酒店和两顿饭，遇到航班取消简直像中了彩票一样幸运。 第二天重新登机，查了航班管家，欣慰的发现换了一架飞机，但高兴不过两秒，就看到这架的机龄是 22 年…… 这公司真的没有更年轻的飞机了么？！ 好在这次没有再出什么幺蛾子，至于又被推迟起飞近一个小时这种小事，几乎都没人为此感到不爽。 和空服人员的年龄比起来，飞机的年龄就显得很小了。 我说「空服」而不说「空姐」，是因为她们如果站在国内那些航空公司的空姐面前，是必须被称为「阿姨」甚至「奶奶」的。当然，我知道在长途的国际航线中，欧美航空公司多半配备中老年为主的服务团队（详情可参阅这个知乎问题），但十几个小时的漫长飞行，总还是要赏心悦目些才更好。 更何况年龄大未必意味着服务更好，我遇到的这几个大龄空姐和空爷，服务就很是牵强，首先服装都不统一，只有最外面的蓝马甲是制服，裤子和里面的衬衫则是各穿各的，格子条纹浅色深色，什么都有，一眼看去很难分清谁是空服谁是乘客。 其次服务方式、和乘客的交流方式也各不相同，每个人都有自己的风格，唯一相似的地方是同样死气沉沉，以及满脸的不耐烦，让乘客深刻的体会到他们也和我们一样在忍受长途飞行的煎熬。只有一个大概50多岁的空乘大爷比较开朗，常给两位年轻漂亮的中国女乘客额外拿些吃的，还愿意克服疲惫和她们谈笑风生。 上上下下的旧金山熬过了一夜，顺利飞到旧金山，不巧那天多云，飞机在云层之上还是晴空万里，落到地面时就灰蒙蒙的，完全看不到我心目中明媚的加州阳光。 （未完……）","link":"/p/1487346013/"}],"tags":[{"name":"python","slug":"python","link":"/tags/python/"},{"name":"知识库管理","slug":"知识库管理","link":"/tags/%E7%9F%A5%E8%AF%86%E5%BA%93%E7%AE%A1%E7%90%86/"},{"name":"Dify实践","slug":"Dify实践","link":"/tags/Dify%E5%AE%9E%E8%B7%B5/"},{"name":"AI应用开发","slug":"AI应用开发","link":"/tags/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/"},{"name":"AI Studio","slug":"AI-Studio","link":"/tags/AI-Studio/"},{"name":"Google","slug":"Google","link":"/tags/Google/"},{"name":"Proxy","slug":"Proxy","link":"/tags/Proxy/"},{"name":"网络配置","slug":"网络配置","link":"/tags/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"},{"name":"代理规则","slug":"代理规则","link":"/tags/%E4%BB%A3%E7%90%86%E8%A7%84%E5%88%99/"},{"name":"Twitter Cards","slug":"Twitter-Cards","link":"/tags/Twitter-Cards/"},{"name":"Meta Tags","slug":"Meta-Tags","link":"/tags/Meta-Tags/"},{"name":"Twitter","slug":"Twitter","link":"/tags/Twitter/"},{"name":"Frontend","slug":"Frontend","link":"/tags/Frontend/"},{"name":"URL Preview","slug":"URL-Preview","link":"/tags/URL-Preview/"},{"name":"tts","slug":"tts","link":"/tags/tts/"},{"name":"语音识别","slug":"语音识别","link":"/tags/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB/"},{"name":"语音识别接口","slug":"语音识别接口","link":"/tags/%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB%E6%8E%A5%E5%8F%A3/"},{"name":"科大讯飞","slug":"科大讯飞","link":"/tags/%E7%A7%91%E5%A4%A7%E8%AE%AF%E9%A3%9E/"},{"name":"腾讯优图","slug":"腾讯优图","link":"/tags/%E8%85%BE%E8%AE%AF%E4%BC%98%E5%9B%BE/"},{"name":"腾讯云","slug":"腾讯云","link":"/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"},{"name":"腾讯AI实验室","slug":"腾讯AI实验室","link":"/tags/%E8%85%BE%E8%AE%AFAI%E5%AE%9E%E9%AA%8C%E5%AE%A4/"},{"name":"旅行","slug":"旅行","link":"/tags/%E6%97%85%E8%A1%8C/"}],"categories":[]}